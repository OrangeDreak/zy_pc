<template>
  <div class="warehouse">
    <!-- 使用公共头部 -->
    <common-header />

    <div class="content">
      <!-- 仓库列表 -->
      <div class="warehouse-list">
        <el-table 
          :data="warehouseList" 
          v-loading="loading"
          @selection-change="handleSelectionChange"
        >
          <!-- 选择列 -->
          <el-table-column type="selection" width="55" />

          <!-- 商品信息 -->
          <el-table-column :label="t('warehouse.table.productInfo')" min-width="400">
            <template #default="{ row }">
              <div class="product-info">
                <el-image :src="row.image" class="product-image" />
                <div class="product-detail">
                  <div class="product-name">{{ row.name }}</div>
                  <div class="product-spec">
                    {{ t('warehouse.product.color') }}：{{ row.color }}
                    <span v-if="row.size">{{ t('warehouse.product.size') }}：{{ row.size }}</span>
                  </div>
                  <div class="product-id">{{ row.id }}</div>
                </div>
              </div>
            </template>
          </el-table-column>

          <!-- 重量 -->
          <el-table-column :label="t('warehouse.table.weight')" width="120" align="center">
            <template #default="{ row }">
              {{ row.weight }}
            </template>
          </el-table-column>

          <!-- 尺寸 -->
          <el-table-column :label="t('warehouse.table.size')" width="150">
            <template #default="{ row }">
              {{ row.size }}
            </template>
          </el-table-column>

          <!-- 数量 -->
          <el-table-column :label="t('warehouse.table.quantity')" width="120" align="center">
            <template #default="{ row }">
              ×{{ row.quantity }}
            </template>
          </el-table-column>

          <!-- 操作 -->
          <el-table-column :label="t('warehouse.table.actions')" width="120" fixed="right">
            <template #default="{ row }">
              <el-button link type="primary" @click="showDetail(row)">
                详情
              </el-button>
            </template>
          </el-table-column>
        </el-table>

        <!-- 分页 -->
        <div class="pagination">
          <div class="total">{{ t('warehouse.pagination.total', { total }) }}</div>
          <el-pagination
            v-model:current-page="page"
            v-model:page-size="pageSize"
            :page-sizes="[10, 20, 50]"
            :total="total"
            layout="prev, pager, next, sizes"
            @size-change="handleSizeChange"
            @current-change="handleCurrentChange"
          />
        </div>
      </div>

      <!-- 底部操作栏 -->
      <div class="bottom-bar">
        <div class="left">
          <el-checkbox v-model="selectAll" @change="handleSelectAll">{{ t('warehouse.bottomBar.selectAll') }}</el-checkbox>
          <span class="selected-count">{{ t('warehouse.bottomBar.selected') }} {{ selectedCount }} {{ t('warehouse.bottomBar.items') }}</span>
        </div>
        <div class="right">
          <el-button 
            type="primary" 
            :disabled="!selectedCount" 
            @click="$router.push('/submit-transfer')"
          >
            提交运送
          </el-button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, computed } from 'vue'
import { useI18n } from 'vue-i18n'
import { ElMessage } from 'element-plus'
import CommonHeader from '@/components/layout/CommonHeader.vue'

const loading = ref(false)
const page = ref(1)
const pageSize = ref(10)
const total = ref(0)

const selectAll = ref(false)
const selectedRows = ref([])
const selectedCount = computed(() => selectedRows.value.length)

// 模拟仓库数据
const warehouseList = ref([
  {
    id: 'SP231364071519347264',
    name: '白色衬衫男长袖修身商务休闲正装衬衣',
    color: '白色',
    size: 'XL',
    image: '/shirt.jpg',
    weight: 350,
    size: '30*25*5',
    quantity: 2
  }
  // ... 其他商品数据
])

// 处理表格选择变化
const handleSelectionChange = (rows) => {
  selectedRows.value = rows
  selectAll.value = rows.length === warehouseList.value.length
}

// 处理全选
const handleSelectAll = (val) => {
  const table = document.querySelector('.el-table')
  if (table) {
    if (val) {
      table.__vue__?.toggleAllSelection()
    } else {
      table.__vue__?.clearSelection()
    }
  }
}

// 分页相关方法
const handleSizeChange = (val) => {
  pageSize.value = val
  // 重新加载数据
}

const handleCurrentChange = (val) => {
  page.value = val
  // 重新加载数据
}

// 查看详情
const showDetail = (row) => {
  // 实现查看详情逻辑
  console.log(t('warehouse.messages.viewDetail'), row)
}
</script>

<style lang="less" scoped>
@import '@/styles/variables.less';

.warehouse {
  padding-top: 60px;
  min-height: 100vh;
  background: linear-gradient(135deg, @primary-bg 0%, @primary-lighter 100%);

  .content {
    .warehouse-list {
      background: #fff;
      padding: 20px;
      border-radius: 4px;
      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);
      margin-bottom: 80px; // 为底部操作栏留出空间

      .product-info {
        display: flex;
        gap: 15px;

        .product-image {
          width: 80px;
          height: 80px;
          border-radius: 4px;
        }

        .product-detail {
          .product-name {
            color: @text-primary;
            margin-bottom: 8px;
          }

          .product-spec {
            color: @text-regular;
            font-size: 14px;
            margin-bottom: 5px;
          }

          .product-id {
            color: @text-secondary;
            font-size: 12px;
          }
        }
      }

      .pagination {
        margin-top: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;

        .total {
          color: @text-regular;
        }

        :deep(.el-pagination.is-background) {
          .el-pager li:not(.is-disabled).is-active {
            background-color: @primary-color;
          }
        }
      }
    }

    .bottom-bar {
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
      height: 60px;
      background: #fff;
      box-shadow: 0 -2px 12px 0 rgba(0, 0, 0, 0.05);
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 20px;
      margin-left: 200px; // 留出侧边栏宽度

      .left {
        display: flex;
        align-items: center;
        gap: 20px;

        .selected-count {
          color: @text-regular;
          font-size: 14px;
        }
      }

      :deep(.el-checkbox) {
        --el-checkbox-checked-bg-color: @primary-color;
        --el-checkbox-checked-border-color: @primary-color;
        --el-checkbox-checked-text-color: @primary-color;
      }

      :deep(.el-button--primary) {
        background-color: @primary-color;
        border-color: @primary-color;

        &:hover {
          background-color: darken(@primary-color, 10%);
          border-color: darken(@primary-color, 10%);
        }

        &.is-disabled {
          background-color: mix(@primary-color, #fff, 50%);
          border-color: mix(@primary-color, #fff, 50%);
        }
      }
    }

    // 表格选择列样式
    :deep(.el-table) {
      .el-checkbox {
        --el-checkbox-checked-bg-color: @primary-color;
        --el-checkbox-checked-border-color: @primary-color;
        --el-checkbox-checked-text-color: @primary-color;
      }
    }
  }
}
</style> 